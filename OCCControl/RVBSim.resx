<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAGACoDAAAFgAAACgAAAAgAAAAQAAAAAEAGAAAAAAAAAAAAGAAAABgAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD+/v7+/Pr+/Pn+/PsAAAAAAAD+
        /fz+/Pn+/Pn+/fwAAAAAAAD//v7++/r+/Pr+/Pn+/fwAAAAAAAAAAAD//v7+/Pr+/Pr+/Pr+/Pr+/Pr+
        /v0AAAAAAAAAAAAAAAAAAAD88+z66dn55tj77+P+/f3+/v777+X56Nj56Nj77+T+/v0AAAD+9/L76tv5
        59j56Nj98Of+/v4AAAD+///99O366dn559n66Nn559j669388+n++/kAAAAAAAAAAAD+/fv42sD2y6j4
        zqr20LD98+v99vD207b3zan3zan20rT99e/+/v/538n1y6j3zar2zar20rX99/AAAAD++vf42sD2y6n3
        zar3zav3zKr2zqv207b65dP++fUAAAAAAAD+9/L1zar54cz55tb2z6765dT66Nj2zaz45tX45NX2zav7
        7N/++vf1zav43cb45dX55NP1y6f76tsAAAD98ur1yqf64s375NL75dL75NH+5M7+2bn0yqf659T//f0A
        AAD88uv61bbPysOViXn/8eH33MP42cH/5tOroZOlnJH/5M7659b88ur4y6nt7uuWiHWpopb/5c/43sj+
        ///76t382LzEv7WlmYepnYunm4qqoZTd19D/48b1z6/99vEAAAD88ej92bu9tad7aVL/9+n31rn3z7H+
        9OyVg22PgnD/6dH66dv66Nn20bTf3t2BbFGUhnT/8+b31LYAAAD559f/4smvpJWGcliLd2CKd2B8a1VX
        SDa5urf/1bH659UAAAD88ej+2ru9s6eBcFv/9+n1zq3807HKy8mgj3iUh3b/6tP87+T74Mvbw67MyseH
        c1icjnvV09H5zqv+/Pv759f/4sm0qZyMeGGQfWeRfWaFc2BuX0wwKyPy38z52L3+///88en/27+xppZ0
        YUj/+Ov0yKT/2LidoJ+XgmmIeWb/7tr99O3/3MGxoJDOysV4YUSXh2+anqH/1a/99vH76Nj/4smrn5B+
        Z06CblODbVN4ZU5sXkwvJxydmJD/2rn+/Pv88en71rnh4N3NyMH/8OH2yKDy18B4eHXj3dTX083/7t78
        9e//27l6c2rl5OPSy8Hp5NtVWl7/5MT77uL66Nn83cPd2tbLwLXMw7nMxLm7saV3aFYzKx5TVFL/4sD9
        +vf98+v41bm7s6WKgHPr3M38yqPKuap/fHisno2KgXT57OP99Oz/2bVnZ2TPxrmWiXqek4ZGS07938T7
        5dP76Nj938e4s6eelIigl4ugl4uro5rQz8p0b2YxMzL/5cP++fT99OvuzrTHtpekkGzLurH/1K+SjoiC
        fnjVvZWejGz38e797eD/3r5naWq4qo/KsouolHFDSEvSv63+4Mj759bz1r+rnH27pYK6o4C6ooCnknJ1
        Z1KsqadNTk7/4cD++fb+8+vy07eZhnaYiG3RysP///FUTkWLg3q1oYK1o5D///z85NH52r5lZ2iRfGTD
        rZGRhWpdYGCXioD/3b/85NL01r+Tgm+9rIu3pYK2pYKwoYCyo4FRSTqurrD/2Lf++vj99O321rl/bWWC
        bl+wr6mvn4xhWE2OgXOkinbFs6f///783MLUwrBhX1yZgW2kiHtvXlRoamVkZmT/3Lv63sj428JzYVmi
        jn/ZzMHbzMDFs6KDd2RiXEaOj4z/4sn+/f3+9e3417t9bGKBb1+WjoOPd1qDfXaFdGOgiXPQvK7/9Of/
        272kmIx3c26dhHCXhnx3ZVtUVEtfY2b/4Lz517z33MNzYll1ZVmimIyYhnGeiXGejIFhWElXW1X/9OMA
        AAD99e352Lx2Z155Z1mak4iPeF6bl5CBbVuSfm3u0Lf74Mn/3Lx5dm+LhHqTe2ixp6F7aGE/PDBXXmL/
        48b4z6/328RtXVRzZFidkYGPemGYhGiWhoFlV0tTVEr///cAAAD+9e362bxvYVlvYFKUi4CXgmeblo6E
        cF6IeWv14dL3zan/3bttbWqAdGeEb17Yx7eKeXE8OStPUlbn0bv5zKb53cVlV05rXVKekoKQfGOXgGOT
        iYVvXFBpYlkAAAAAAAD+9e382b1qXVZlVkiuqaPVy8J3bFyDcV6JfXSNiIH/06v6279ubm5uX1B5Zlnt
        2MOYiIFIQTRQU1O3q6D+zqf43MReUEljV0yhlYWOemG4qJKRiYNzX1N9c2r///sAAAD99O392r1lWFNh
        UkaKg3rEuKZ0ZVCUgGxNRDxjZWL/2LHlyrRycnFlVERyY1f/69u3pZ9IPjNeYF6GgHr/1Kz43cVYS0RU
        Rzzh4d7s6OTf2tNuX0twX1GklIj/9ecAAAD99e/+3L9eU05dUUZ1Zk7azbF9bVmcin5+e3dTU1L/3LO6
        r6FxbmllVEZ3a2H/+uzTyL1CNS1YWVRZXV3/27f63sZPRT9XS0J+b1t/b1vk1LR1ZVF5aljiw6v+7N8A
        AAD99u//3L9XTklhVUlyaFJsYEt3aFpZUD6qpqNvb2z/3rWUjIR3cmtdTUGOgnn///fz5NlBNS8+Pzda
        X2L/3bz63cRHPTdeUkZ4a1V5bVWnl3yBb15hWFHy0Lb97eAAAAD+9e7/3r9RSUVeUkailYqnl4xpXE9P
        SjkuKx/W0s//3rd2dXB0a2NURjqglIr///3/9+xGPDgoJB1bYWT01Lj938Y+NDFsYFJzZlZzZldwYFNs
        XE2OkZPlxar+8OUAAAD99e7/3sFTSUZANiyhnJOYhWugjHdIPzkcHBG2sqz/48JramliWExOQDTLvLQA
        AAD//PFoXVclIRhcX2DNuqj/4sg9NDBUSUKqmYqchnBoW1BNSDVhYl7/69T89O0AAAD+9/L/38BZT0pK
        PzWZk4mRfWSij3drYV4xLCSDgXj93slsbGlZSz5TRTrp3dEAAAD///uRg3szLSNUVlWblIr/5MhEOzVG
        Pzejl4aXg2apmYpGPTQgJBz/7+H//PkAAAD++vb/4cNdU01QRDqXkYaTf2WciG52bGpGOzJ9fHPtz716
        eXVZSj1fU0j/9eoAAAD///y0o5o7MilSVFGNhHz/5MdKPzlORT6kloWWgmepm4pMPjolJBzx5+AAAAAA
        AAD//v3/6dJiVlBXS0CRin2Ic1i8rZpuZV9gT0SNioDw08J8e3VmVUh0Z17///cAAAAAAADazcdBNCtB
        RD2ropr/4cVOQz1VS0OdjnyLdFfHv7VMPTNEOjDw8O8AAAAAAAAAAAD/+/JoWlNaTECxr6zj39ra1M1h
        UkJsWUy3s67/9e10bmVvW02flIsAAAAAAAAAAAD49fBLOzMxMCfRy8b/7NpURz5SRzza1tLj3dewqJ5j
        U0ZhUkb9/v8AAAAAAAAAAAAAAABsXlZlV0t4bV6ej3zf0rZ5Z1V7ZlPo6OgAAABrX1N2YlK0r6oAAAAA
        AAAAAAAAAABaTEQvKh/a29r///1ZST9bT0WPhHStoY6+rZFwYFGLfXAAAAAAAAAAAAAAAAAAAABvX1dq
        W1Cdjm6nlHS1pomIdl+nkoAAAAD6+/xkU0R6ZlXW09IAAAAAAAAAAAAAAAB6bWY4LySusK8AAABYSDx4
        Z1qci22zoH+klXqVgGbEubQAAAAAAAAAAAAAAAAAAACRgHibinGRhW6PgmudjHbUvKXs6OgAAADp6ep4
        ZFGUfmjt7/EAAAAAAAAAAAAAAACwoqBnWkaKi4gAAACCbmCbinOShm2Qg2utmoPQuqsAAAAAAAAAAAAA
        AAAAAAAAAADh3Nnp4Njm3djn3djv5uH28vIAAAAAAAD4+PnRxr7c08sAAAAAAAAAAAAAAAAAAADk39/Y
        zsTY2NcAAADe1tHn39fl3Nbn3tnw6eP7+/0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAD/////hhg4D4AIEAcAABADAAAQAQAAAAEAABABAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAEAAAABAAAAAwAAAAEAAAABAAAAAQAAAAEAAAABAAEAAQABAAEAAQADAAGAA4AD
        gAPAI8AHwEPEB8BDxA/Ax8QP/////w==
</value>
  </data>
</root>